import{_ as t}from"./035_grpo_four_main_steps-4GJC7mWc.js";import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as l,c as p,f as i,a as s,b as a,e as n}from"./app-PDpchPSG.js";const o={},c=s("h1",{id:"easyr1-verl-ray-qwenvl-grpo",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#easyr1-verl-ray-qwenvl-grpo","aria-hidden":"true"},"#"),a(" EasyR1 + Verl + Ray + QwenVL + GRPO")],-1),r=s("ul",null,[s("li",null,"Background Introduction"),s("li",null,"GRPO Four Main Steps"),s("li",null,"Implementation of GRPO Training Code Using EasyR1"),s("li",null,"Practical Record of GRPO Training Details")],-1),m=n('<h2 id="_1-background-introduction" tabindex="-1"><a class="header-anchor" href="#_1-background-introduction" aria-hidden="true">#</a> 1. Background Introduction</h2><ul><li>EasyR1 <ul><li>https://github.com/hiyouga/EasyR1</li></ul></li><li>Verl <ul><li>https://github.com/volcengine/verl</li></ul></li><li>Ray: Distributed Computing Framework <ul><li>https://segmentfault.com/a/1190000046195156</li></ul></li><li>GRPO <ul><li>Group Relative Policy Optimization</li><li>grpo_trainer: https://huggingface.co/docs/trl/v0.16.1/grpo_trainer</li></ul></li><li>Experimental Records <ul><li>Model: QwenVL <ul><li>https://huggingface.co/Qwen/Qwen2.5-VL-3B-Instruct</li></ul></li><li>Dataset: geometry3k <ul><li>https://huggingface.co/datasets/hiyouga/geometry3k</li></ul></li><li>Environment: One 8-card A800-80G</li><li>Time Consumption: Training on geometry3k dataset (2.1k) for 15 episodes took a total of 8h20min</li></ul></li></ul><h2 id="_2-grpo-four-main-steps" tabindex="-1"><a class="header-anchor" href="#_2-grpo-four-main-steps" aria-hidden="true">#</a> 2. GRPO Four Main Steps</h2><p>GRPO Four Main Steps</p><ul><li>Generating completions</li><li>Computing the advantage</li><li>Estimating the KL divergence</li><li>Computing the loss</li></ul><figure><img src="'+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-1-generating-completions" tabindex="-1"><a class="header-anchor" href="#_2-1-generating-completions" aria-hidden="true">#</a> 2.1. Generating Completions</h3>',7),u=s("p",null,[a("In each training step, a batch of prompts is sampled, and a set of completion sequences (a group of G, each denoted as "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"o"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"o_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(") is generated for each prompt.")],-1),h=s("h3",{id:"_2-2-computing-the-advantage",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-2-computing-the-advantage","aria-hidden":"true"},"#"),a(" 2.2. Computing the Advantage")],-1),d=s("p",null,[a("For each of the G sequences in the group, rewards "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"r_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" are calculated using the reward model. The advantage "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"A"),s("mo",null,"^")]),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"t")])])]),s("annotation",{encoding:"application/x-tex"},"\\hat{A}_{i,t}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2329em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord accent"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9468em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"A")]),s("span",{style:{top:"-3.2523em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"accent-body",style:{left:"-0.1111em"}},[s("span",{class:"mord"},"^")])])])])])]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])])]),a(" is computed through relative comparison and normalized as follows:")],-1),g=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"A"),s("mo",null,"^")]),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"t")])]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"i")]),s("mo",null,"−"),s("mtext",null,"mean"),s("mo",{stretchy:"false"},"("),s("mi",null,"r"),s("mo",{stretchy:"false"},")")]),s("mrow",null,[s("mtext",null,"std"),s("mo",{stretchy:"false"},"("),s("mi",null,"r"),s("mo",{stretchy:"false"},")")])])]),s("annotation",{encoding:"application/x-tex"}," \\hat{A}_{i,t} = \\frac{r_i - \\text{mean}(r)}{\\text{std}(r)} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2329em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord accent"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9468em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"A")]),s("span",{style:{top:"-3.2523em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"accent-body",style:{left:"-0.1111em"}},[s("span",{class:"mord"},"^")])])])])])]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.363em","vertical-align":"-0.936em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.427em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"std")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mclose"},")")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"mean")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mclose"},")")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1),v=s("h3",{id:"_2-3-estimating-the-kl-divergence",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-3-estimating-the-kl-divergence","aria-hidden":"true"},"#"),a(" 2.3. Estimating the KL Divergence")],-1),k=s("p",null,"The KL divergence is estimated using the approximator introduced by Schulman et al. (2020). The approximator is defined as follows:",-1),b=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mtext",null,"KL")]),s("mo",{stretchy:"false"},"["),s("msub",null,[s("mi",null,"π"),s("mi",null,"θ")]),s("mo",null,"∥"),s("msub",null,[s("mi",null,"π"),s("mtext",null,"ref")]),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("msub",null,[s("mi",null,"π"),s("mtext",null,"ref")]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"t")])]),s("mo",null,"∣"),s("mi",null,"q"),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mo",null,"<"),s("mi",null,"t")])]),s("mo",{stretchy:"false"},")")]),s("mrow",null,[s("msub",null,[s("mi",null,"π"),s("mi",null,"θ")]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"t")])]),s("mo",null,"∣"),s("mi",null,"q"),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mo",null,"<"),s("mi",null,"t")])]),s("mo",{stretchy:"false"},")")])]),s("mo",null,"−"),s("mi",null,"log"),s("mo",null,"⁡"),s("mfrac",null,[s("mrow",null,[s("msub",null,[s("mi",null,"π"),s("mtext",null,"ref")]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"t")])]),s("mo",null,"∣"),s("mi",null,"q"),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mo",null,"<"),s("mi",null,"t")])]),s("mo",{stretchy:"false"},")")]),s("mrow",null,[s("msub",null,[s("mi",null,"π"),s("mi",null,"θ")]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"t")])]),s("mo",null,"∣"),s("mi",null,"q"),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mo",null,"<"),s("mi",null,"t")])]),s("mo",{stretchy:"false"},")")])]),s("mo",null,"−"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"}," D_{\\text{KL}}[\\pi_\\theta \\parallel \\pi_{\\text{ref}}] = \\frac{\\pi_{\\text{ref}}(o_{i,t} \\mid q, o_{i,<t})}{\\pi_\\theta(o_{i,t} \\mid q, o_{i,<t})} - \\log \\frac{\\pi_{\\text{ref}}(o_{i,t} \\mid q, o_{i,<t})}{\\pi_\\theta(o_{i,t} \\mid q, o_{i,<t})} - 1 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"KL")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"["),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"θ")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∥"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"ref")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.3991em","vertical-align":"-0.9721em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.427em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"θ")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mrel mtight"},"<"),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"ref")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mrel mtight"},"<"),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9721em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.3991em","vertical-align":"-0.9721em"}}),s("span",{class:"mop"},[a("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.427em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"θ")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mrel mtight"},"<"),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"ref")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mrel mtight"},"<"),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9721em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])])])],-1),y=s("h3",{id:"_2-4-computing-the-loss",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-4-computing-the-loss","aria-hidden":"true"},"#"),a(" 2.4. Computing the Loss")],-1),_=s("p",null,"The goal is to maximize the advantage while ensuring that the model remains close to the reference policy. Therefore, the loss function is defined as follows:",-1),f=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"L"),s("mtext",null,"GRPO")]),s("mo",{stretchy:"false"},"("),s("mi",null,"θ"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mo",null,"−"),s("mfrac",null,[s("mn",null,"1"),s("mi",null,"G")]),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"G")]),s("mfrac",null,[s("mn",null,"1"),s("mrow",null,[s("mi",{mathvariant:"normal"},"∣"),s("msub",null,[s("mi",null,"o"),s("mi",null,"i")]),s("mi",{mathvariant:"normal"},"∣")])]),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"t"),s("mo",null,"="),s("mn",null,"1")]),s("mrow",null,[s("mi",{mathvariant:"normal"},"∣"),s("msub",null,[s("mi",null,"o"),s("mi",null,"i")]),s("mi",{mathvariant:"normal"},"∣")])]),s("mrow",null,[s("mo",{fence:"true"},"["),s("mfrac",null,[s("mrow",null,[s("msub",null,[s("mi",null,"π"),s("mi",null,"θ")]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"t")])]),s("mo",null,"∣"),s("mi",null,"q"),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mo",null,"<"),s("mi",null,"t")])]),s("mo",{stretchy:"false"},")")]),s("mrow",null,[s("mo",{stretchy:"false"},"["),s("msub",null,[s("mi",null,"π"),s("mi",null,"θ")]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"t")])]),s("mo",null,"∣"),s("mi",null,"q"),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"o"),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mo",null,"<"),s("mi",null,"t")])]),s("mo",{stretchy:"false"},")"),s("msub",null,[s("mo",{stretchy:"false"},"]"),s("mtext",null,"no grad")])])]),s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"A"),s("mo",null,"^")]),s("mrow",null,[s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"t")])]),s("mo",null,"−"),s("mi",null,"β"),s("msub",null,[s("mi",null,"D"),s("mtext",null,"KL")]),s("mo",{stretchy:"false"},"["),s("msub",null,[s("mi",null,"π"),s("mi",null,"θ")]),s("mo",null,"∥"),s("msub",null,[s("mi",null,"π"),s("mtext",null,"ref")]),s("mo",{stretchy:"false"},"]"),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"}," L_{\\text{GRPO}}(\\theta) = -\\frac{1}{G} \\sum_{i=1}^G \\frac{1}{|o_i|} \\sum_{t=1}^{|o_i|} \\left[ \\frac{\\pi_\\theta(o_{i,t} \\mid q, o_{i,<t})}{[\\pi_\\theta(o_{i,t} \\mid q, o_{i,<t})]_{\\text{no grad}}} \\hat{A}_{i,t} - \\beta D_{\\text{KL}}[\\pi_\\theta \\parallel \\pi_{\\text{ref}}] \\right] ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"GRPO")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.2387em","vertical-align":"-1.2777em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3214em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.686em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.8283em"}},[s("span",{style:{top:"-1.8723em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"∑")])]),s("span",{style:{top:"-4.3em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"G")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2777em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3214em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"∣"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mord"},"∣")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.961em"}},[s("span",{style:{top:"-1.8829em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"∑")])]),s("span",{style:{top:"-4.386em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"∣"),s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3281em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])]),s("span",{class:"mord mtight"},"∣")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2671em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"[")]),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.427em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mopen"},"["),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"θ")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mrel mtight"},"<"),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"]"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"no grad")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"θ")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"o"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mrel mtight"},"<"),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9721em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mord"},[s("span",{class:"mord accent"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9468em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"A")]),s("span",{style:{top:"-3.2523em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"accent-body",style:{left:"-0.1111em"}},[s("span",{class:"mord"},"^")])])])])])]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"KL")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"["),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"θ")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∥"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"ref")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},"]"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"]")])])])])])])],-1),z=n(`<p>Where the first term represents the scaled advantage, and the second term represents the penalty for deviating from the reference policy through KL divergence.</p><h2 id="_3-implementation-of-grpo-training-code-using-easyr1" tabindex="-1"><a class="header-anchor" href="#_3-implementation-of-grpo-training-code-using-easyr1" aria-hidden="true">#</a> 3. Implementation of GRPO Training Code Using EasyR1</h2><h3 id="_3-1-grpo-training-examples-qwen2-5-vl-3b-geo3k-grpo-sh" tabindex="-1"><a class="header-anchor" href="#_3-1-grpo-training-examples-qwen2-5-vl-3b-geo3k-grpo-sh" aria-hidden="true">#</a> 3.1. GRPO Training: examples/qwen2_5_vl_3b_geo3k_grpo.sh</h3><ul><li>Change comments to indicate modified areas</li><li>If the command line <code>python3 -m verl.trainer.main</code> has the same configuration items as <code>examples/config.yaml</code>, the configurations here will override those in <code>examples/config.yaml</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> <span class="token parameter variable">-x</span>

<span class="token builtin class-name">export</span> <span class="token assign-left variable">VLLM_ATTENTION_BACKEND</span><span class="token operator">=</span>XFORMERS <span class="token comment"># change</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">VLLM_USE_V1</span><span class="token operator">=</span><span class="token number">0</span> <span class="token comment"># change</span>

<span class="token assign-left variable">RAY_PORT</span><span class="token operator">=</span><span class="token number">6379</span> <span class="token comment"># change</span>
<span class="token assign-left variable">DASHBOARD_PORT</span><span class="token operator">=</span><span class="token number">8297</span> <span class="token comment"># change</span>

<span class="token assign-left variable">MODEL_PATH</span><span class="token operator">=</span>Qwen/Qwen2.5-VL-3B-Instruct  <span class="token comment"># replace it with your local file path</span>

<span class="token assign-left variable">SYSTEM_PROMPT</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>&quot;You FIRST think about the reasoning process as an internal monologue and <span class="token keyword">then</span> provide the final answer.
 The reasoning process MUST BE enclosed within <span class="token operator">&lt;</span>think<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>/think<span class="token operator">&gt;</span> tags. The final answer MUST BE put <span class="token keyword">in</span> <span class="token punctuation">\\</span>boxed<span class="token punctuation">{</span><span class="token punctuation">}</span>.<span class="token string">&quot;&quot;</span>&quot;

python3 <span class="token parameter variable">-m</span> verl.trainer.main <span class="token punctuation">\\</span>
    <span class="token assign-left variable">config</span><span class="token operator">=</span>examples/config.yaml <span class="token punctuation">\\</span>
    <span class="token assign-left variable">data.train_files</span><span class="token operator">=</span>hiyouga/geometry3k@train <span class="token punctuation">\\</span>
    <span class="token assign-left variable">data.val_files</span><span class="token operator">=</span>hiyouga/geometry3k@test <span class="token punctuation">\\</span>
    <span class="token assign-left variable">data.system_prompt</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${SYSTEM_PROMPT}</span>&quot;</span> <span class="token punctuation">\\</span> 
    <span class="token assign-left variable">worker.actor.model.model_path</span><span class="token operator">=</span><span class="token variable">\${MODEL_PATH}</span> <span class="token punctuation">\\</span>
    <span class="token assign-left variable">worker.rollout.tensor_parallel_size</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">\\</span>
    <span class="token assign-left variable">trainer.experiment_name</span><span class="token operator">=</span>qwen2_5_vl_3b_geo_grpo <span class="token punctuation">\\</span>
    <span class="token assign-left variable">trainer.n_gpus_per_node</span><span class="token operator">=</span><span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-configuration-file-examples-config-yaml" tabindex="-1"><a class="header-anchor" href="#_3-2-configuration-file-examples-config-yaml" aria-hidden="true">#</a> 3.2. Configuration File: examples/config.yaml</h3><ul><li>Change comments to indicate modified areas</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">data</span><span class="token punctuation">:</span>
  <span class="token key atrule">train_files</span><span class="token punctuation">:</span> hiyouga/math12k@train
  <span class="token key atrule">val_files</span><span class="token punctuation">:</span> hiyouga/math12k@test
  <span class="token key atrule">prompt_key</span><span class="token punctuation">:</span> problem
  <span class="token key atrule">answer_key</span><span class="token punctuation">:</span> answer
  <span class="token key atrule">image_key</span><span class="token punctuation">:</span> images
  <span class="token key atrule">max_prompt_length</span><span class="token punctuation">:</span> <span class="token number">2048</span>
  <span class="token key atrule">max_response_length</span><span class="token punctuation">:</span> <span class="token number">2096</span> <span class="token comment"># change</span>
  <span class="token key atrule">rollout_batch_size</span><span class="token punctuation">:</span> <span class="token number">256</span> <span class="token comment"># change</span>
  <span class="token key atrule">val_batch_size</span><span class="token punctuation">:</span> <span class="token number">-1</span>
  <span class="token key atrule">shuffle</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">seed</span><span class="token punctuation">:</span> <span class="token number">1</span>
  <span class="token key atrule">max_pixels</span><span class="token punctuation">:</span> <span class="token number">2097152</span> <span class="token comment"># change</span>
  <span class="token key atrule">min_pixels</span><span class="token punctuation">:</span> <span class="token number">262144</span>

<span class="token key atrule">algorithm</span><span class="token punctuation">:</span>
  <span class="token key atrule">adv_estimator</span><span class="token punctuation">:</span> grpo
  <span class="token key atrule">disable_kl</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">use_kl_loss</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">kl_penalty</span><span class="token punctuation">:</span> low_var_kl
  <span class="token key atrule">kl_coef</span><span class="token punctuation">:</span> <span class="token number">1.0e-2</span>

<span class="token key atrule">worker</span><span class="token punctuation">:</span>
  <span class="token key atrule">actor</span><span class="token punctuation">:</span>
    <span class="token key atrule">global_batch_size</span><span class="token punctuation">:</span> <span class="token number">64</span> <span class="token comment"># change</span>
    <span class="token key atrule">micro_batch_size_per_device_for_update</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment"># change</span>
    <span class="token key atrule">micro_batch_size_per_device_for_experience</span><span class="token punctuation">:</span> <span class="token number">8</span> <span class="token comment"># change</span>
    <span class="token key atrule">max_grad_norm</span><span class="token punctuation">:</span> <span class="token number">1.0</span>
    <span class="token key atrule">padding_free</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">ulysses_sequence_parallel_size</span><span class="token punctuation">:</span> <span class="token number">1</span>
    <span class="token key atrule">model</span><span class="token punctuation">:</span>
      <span class="token key atrule">model_path</span><span class="token punctuation">:</span> Qwen/Qwen2.5<span class="token punctuation">-</span>7B<span class="token punctuation">-</span>Instruct
      <span class="token key atrule">enable_gradient_checkpointing</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">trust_remote_code</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
      <span class="token key atrule">freeze_vision_tower</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">optim</span><span class="token punctuation">:</span>
      <span class="token key atrule">lr</span><span class="token punctuation">:</span> <span class="token number">1.0e-6</span>
      <span class="token key atrule">weight_decay</span><span class="token punctuation">:</span> <span class="token number">1.0e-2</span>
      <span class="token key atrule">strategy</span><span class="token punctuation">:</span> adamw  <span class="token comment"># {adamw, adamw_bf16}</span>
      <span class="token key atrule">lr_warmup_ratio</span><span class="token punctuation">:</span> <span class="token number">0.0</span>
    <span class="token key atrule">fsdp</span><span class="token punctuation">:</span>
      <span class="token key atrule">enable_full_shard</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">enable_cpu_offload</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
      <span class="token key atrule">enable_rank0_init</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">offload</span><span class="token punctuation">:</span> <span class="token comment"># change</span>
      <span class="token key atrule">offload_params</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># true: more CPU memory; false: more GPU memory</span>
      <span class="token key atrule">offload_optimizer</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># true: more CPU memory; false: more GPU memory</span>

  <span class="token key atrule">rollout</span><span class="token punctuation">:</span>
    <span class="token key atrule">temperature</span><span class="token punctuation">:</span> <span class="token number">1.0</span>
    <span class="token key atrule">n</span><span class="token punctuation">:</span> <span class="token number">6</span> <span class="token comment"># change</span>
    <span class="token key atrule">gpu_memory_utilization</span><span class="token punctuation">:</span> <span class="token number">0.7</span> <span class="token comment"># change</span>
    <span class="token key atrule">enforce_eager</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enable_chunked_prefill</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">tensor_parallel_size</span><span class="token punctuation">:</span> <span class="token number">2</span>
    <span class="token key atrule">limit_images</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># change</span>
    <span class="token key atrule">val_override_config</span><span class="token punctuation">:</span>
      <span class="token key atrule">temperature</span><span class="token punctuation">:</span> <span class="token number">0.2</span> <span class="token comment"># change</span>
      <span class="token key atrule">n</span><span class="token punctuation">:</span> <span class="token number">1</span>

  <span class="token key atrule">ref</span><span class="token punctuation">:</span>
    <span class="token key atrule">fsdp</span><span class="token punctuation">:</span>
      <span class="token key atrule">enable_full_shard</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">enable_cpu_offload</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># true: more CPU memory; false: more GPU memory # change</span>
      <span class="token key atrule">enable_rank0_init</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">offload</span><span class="token punctuation">:</span>
      <span class="token key atrule">offload_params</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>

  <span class="token key atrule">reward</span><span class="token punctuation">:</span>
    <span class="token key atrule">reward_type</span><span class="token punctuation">:</span> function
    <span class="token key atrule">compute_score</span><span class="token punctuation">:</span> math

<span class="token key atrule">trainer</span><span class="token punctuation">:</span>
  <span class="token key atrule">total_episodes</span><span class="token punctuation">:</span> <span class="token number">15</span> <span class="token comment"># change</span>
  <span class="token key atrule">logger</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;console&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wandb&quot;</span><span class="token punctuation">]</span>
  <span class="token key atrule">project_name</span><span class="token punctuation">:</span> easy_r1
  <span class="token key atrule">experiment_name</span><span class="token punctuation">:</span> qwen2_5_7b_math_grpo
  <span class="token key atrule">n_gpus_per_node</span><span class="token punctuation">:</span> <span class="token number">8</span>
  <span class="token key atrule">nnodes</span><span class="token punctuation">:</span> <span class="token number">1</span>
  <span class="token key atrule">val_freq</span><span class="token punctuation">:</span> <span class="token number">5</span>  <span class="token comment"># -1 to disable</span>
  <span class="token key atrule">val_before_train</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">val_only</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">val_generations_to_log</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># change</span>
  <span class="token key atrule">save_freq</span><span class="token punctuation">:</span> <span class="token number">5</span>  <span class="token comment"># -1 to disable</span>
  <span class="token key atrule">save_limit</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token comment"># -1 to disable</span>
  <span class="token key atrule">save_checkpoint_path</span><span class="token punctuation">:</span> <span class="token null important">null</span>
  <span class="token key atrule">load_checkpoint_path</span><span class="token punctuation">:</span> <span class="token null important">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-entry-point-verl-trainer-main-py" tabindex="-1"><a class="header-anchor" href="#_3-3-entry-point-verl-trainer-main-py" aria-hidden="true">#</a> 3.3. Entry Point: verl.trainer.main.py</h3><ul><li><ol><li>Merge configurations</li></ol><ul><li>First, merge the default configuration with the configuration from the file</li><li>Then, merge the previously merged configuration with the configuration from the command line</li></ul></li><li><ol start="2"><li>Initialize ray (if ray is not initialized)</li></ol><ul><li>ray.init(runtime_env={&quot;env_vars&quot;: {&quot;TOKENIZERS_PARALLELISM&quot;: &quot;true&quot;, &quot;NCCL_DEBUG&quot;: &quot;WARN&quot;}})</li></ul></li><li><ol start="3"><li>Let ray execute runner.run</li></ol><ul><li>ray.get(runner.run.remote(ppo_config))</li></ul></li><li><ol start="4"><li>Instantiate trainer and execute training</li></ol></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>trainer <span class="token operator">=</span> RayPPOTrainer<span class="token punctuation">(</span>
    config<span class="token operator">=</span>config<span class="token punctuation">,</span>
    tokenizer<span class="token operator">=</span>tokenizer<span class="token punctuation">,</span>
    processor<span class="token operator">=</span>processor<span class="token punctuation">,</span>
    role_worker_mapping<span class="token operator">=</span>role_worker_mapping<span class="token punctuation">,</span>
    resource_pool_manager<span class="token operator">=</span>resource_pool_manager<span class="token punctuation">,</span>
    ray_worker_group_cls<span class="token operator">=</span>ray_worker_group_cls<span class="token punctuation">,</span>
    reward_fn<span class="token operator">=</span>reward_fn<span class="token punctuation">,</span>
    val_reward_fn<span class="token operator">=</span>val_reward_fn<span class="token punctuation">,</span>
<span class="token punctuation">)</span>
trainer<span class="token punctuation">.</span>init_workers<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># Init resource pool and worker group</span>
trainer<span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># The training loop of PPO</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-trainer-fit" tabindex="-1"><a class="header-anchor" href="#_3-4-trainer-fit" aria-hidden="true">#</a> 3.4. trainer.fit()</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">RayPPOTrainer</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">fit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> _ <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>trainer<span class="token punctuation">.</span>total_episodes<span class="token punctuation">)</span><span class="token punctuation">,</span> desc<span class="token operator">=</span><span class="token string">&quot;Episode&quot;</span><span class="token punctuation">,</span> position<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> batch_dict <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span>self<span class="token punctuation">.</span>train_dataloader<span class="token punctuation">,</span> desc<span class="token operator">=</span><span class="token string">&quot;Running step&quot;</span><span class="token punctuation">,</span> position<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token comment"># generate sequences</span>
                gen_batch_output <span class="token operator">=</span> self<span class="token punctuation">.</span>actor_rollout_wg<span class="token punctuation">.</span>generate_sequences<span class="token punctuation">(</span>gen_batch<span class="token punctuation">)</span>
                <span class="token comment"># compute reward</span>
                reward_tensor<span class="token punctuation">,</span> reward_metrics <span class="token operator">=</span> self<span class="token punctuation">.</span>reward_fn<span class="token punctuation">(</span>batch<span class="token punctuation">)</span>
                batch<span class="token punctuation">.</span>batch<span class="token punctuation">[</span><span class="token string">&quot;token_level_scores&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> reward_tensor
                reward_metrics <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-interpolation"><span class="token string">f&quot;reward/</span><span class="token interpolation"><span class="token punctuation">{</span>key<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">:</span> value <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> reduce_metrics<span class="token punctuation">(</span>reward_metrics<span class="token punctuation">)</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token comment"># recompute old_log_probs</span>
                old_log_probs <span class="token operator">=</span> self<span class="token punctuation">.</span>actor_rollout_wg<span class="token punctuation">.</span>compute_log_probs<span class="token punctuation">(</span>batch<span class="token punctuation">)</span>
                <span class="token comment"># compute ref_log_probs</span>
                ref_log_probs <span class="token operator">=</span> self<span class="token punctuation">.</span>ref_policy_wg<span class="token punctuation">.</span>compute_ref_log_probs<span class="token punctuation">(</span>batch<span class="token punctuation">)</span>
                batch<span class="token punctuation">.</span>batch<span class="token punctuation">[</span><span class="token string">&quot;token_level_rewards&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> batch<span class="token punctuation">.</span>batch<span class="token punctuation">[</span><span class="token string">&quot;token_level_scores&quot;</span><span class="token punctuation">]</span>
                <span class="token comment"># compute advantages</span>
                batch <span class="token operator">=</span> compute_advantage<span class="token punctuation">(</span>
                    batch<span class="token punctuation">,</span>
                    adv_estimator<span class="token operator">=</span>self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>algorithm<span class="token punctuation">.</span>adv_estimator<span class="token punctuation">,</span>
                    gamma<span class="token operator">=</span>self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>algorithm<span class="token punctuation">.</span>gamma<span class="token punctuation">,</span>
                    lam<span class="token operator">=</span>self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>algorithm<span class="token punctuation">.</span>lam<span class="token punctuation">,</span>
                <span class="token punctuation">)</span>
                <span class="token comment"># update actor</span>
                actor_output <span class="token operator">=</span> self<span class="token punctuation">.</span>actor_rollout_wg<span class="token punctuation">.</span>update_actor<span class="token punctuation">(</span>batch<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-practical-record-of-grpo-training-details" tabindex="-1"><a class="header-anchor" href="#_4-practical-record-of-grpo-training-details" aria-hidden="true">#</a> 4. Practical Record of GRPO Training Details</h2><h3 id="_4-1-key-data-information" tabindex="-1"><a class="header-anchor" href="#_4-1-key-data-information" aria-hidden="true">#</a> 4.1. Key Data Information</h3><ul><li>train_dataset: 2100 (2100 training data entries)</li><li>val_dataset: 300 (300 validation data entries)</li><li>max_prompt_len: 2048 (Maximum length of Prompt is 2048 tokens)</li><li>max_resp_len: 2096 (Maximum length of Completion is 2096 tokens)</li><li>max_total_len: 4144 (Total maximum length of Prompt and Completion is 4144 tokens) <ul><li>(max_total_len = max_prompt_len + max_resp_len = 2048 + 2096 = 4144)</li></ul></li><li>total_episodes: 15 (Total number of epochs is 15)</li><li>rollout_batch_size: 256 (256 entries as one rollout batch)</li><li>rollout_n: 6 (Each entry generates 6 sequences)</li><li>rollout_batch_size * rollout_n = 256 * 6 = 1536 (One rollout batch processes 1536 sequences)</li><li>nnodes: 1 (Number of nodes is 1)</li><li>n_gpus_per_node: 8 (Number of GPUs per node is 8)</li><li>world_size = nnodes * n_gpus_per_node = 1 * 8 = 8 (Concurrency world_size is 8)</li><li>(rollout_batch_size * rollout_n) / (nnodes * n_gpus_per_node) = 256 * 6 / 8 = 192 (Each GPU processes 192 token sequences)</li><li>global_batch_size: 64 (Global batch size is 64, meaning 64 sequences are updated at once)</li><li>global_batch_size_per_device = global_batch_size * rollout_n / world_size = 64 * 6 / 8 = 48 (Global batch size per GPU)</li><li>mini_batches = nums_per_rank / global_batch_size_per_device = 192/ 48 = 4 (Each rollout batch is processed in 4 updates)</li><li>micro_batch_size_per_device_for_experience: 8 (Each GPU&#39;s processing micro-batch is 8)</li><li>micro_batch_size_per_device_for_update: 2 (Each GPU&#39;s update micro-batch is 2)</li></ul><h3 id="_4-2-training-details" tabindex="-1"><a class="header-anchor" href="#_4-2-training-details" aria-hidden="true">#</a> 4.2. Training Details</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>- episodes <span class="token number">15</span> <span class="token punctuation">(</span><span class="token number">15</span> epochs<span class="token punctuation">)</span>
    - steps <span class="token number">8</span> <span class="token punctuation">(</span>train_dataset / rollout_batch_size <span class="token operator">=</span>  <span class="token number">2100</span> / <span class="token number">256</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Each <span class="token number">256</span> entries of the dataset as one rollout batch, each epoch is divided into <span class="token number">8</span> steps<span class="token punctuation">)</span>
        - batch_dict
            - batch_dict.keys<span class="token punctuation">(</span><span class="token punctuation">)</span>: <span class="token punctuation">[</span><span class="token string">&#39;input_ids&#39;</span>, <span class="token string">&#39;attention_mask&#39;</span>, <span class="token string">&#39;position_ids&#39;</span>, <span class="token string">&#39;problem&#39;</span>, <span class="token string">&#39;id&#39;</span>, <span class="token string">&#39;choices&#39;</span>, <span class="token string">&#39;ground_truth&#39;</span>, <span class="token string">&#39;multi_modal_data&#39;</span>, <span class="token string">&#39;multi_modal_inputs&#39;</span>, <span class="token string">&#39;raw_prompt_ids&#39;</span><span class="token punctuation">]</span>
            - batch_dict<span class="token punctuation">[</span><span class="token string">&#39;input_ids&#39;</span><span class="token punctuation">]</span>.shape: <span class="token punctuation">(</span>rollout_batch_size, max_prompt_len<span class="token punctuation">)</span> 
                - <span class="token punctuation">[</span><span class="token number">256</span>, <span class="token number">2048</span><span class="token punctuation">]</span>
        - nums_per_step <span class="token number">1536</span> <span class="token punctuation">(</span>rollout_batch_size * rollout_n <span class="token operator">=</span> <span class="token number">256</span> * <span class="token number">6</span> <span class="token operator">=</span> <span class="token number">1536</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>One rollout batch has <span class="token number">256</span> entries, each entry generates <span class="token number">6</span> sequences, a total of <span class="token number">1536</span> token sequences to be processed<span class="token punctuation">)</span>
            - nums_per_rank <span class="token number">192</span> <span class="token punctuation">(</span>rollout_batch_size * rollout_n / world_size <span class="token operator">=</span> <span class="token number">1536</span> / <span class="token number">8</span> <span class="token operator">=</span> <span class="token number">192</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>With <span class="token number">8</span> GPUs, each GPU processes <span class="token number">192</span> token sequences<span class="token punctuation">)</span>
                - generate sequences
                - compute reward
                    - reward_tensor, reward_metrics <span class="token operator">=</span> self.reward_fn<span class="token punctuation">(</span>batch<span class="token punctuation">)</span>
                    - batch.batch<span class="token punctuation">[</span><span class="token string">&quot;token_level_scores&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> reward_tensor <span class="token comment"># Each token&#39;s score, (each token corresponds to a score, the token at boxed{x} as the answer has a score greater than 0, others equal to 0)</span>
                    - reward_metrics: <span class="token punctuation">{</span><span class="token string">&#39;reward/overall&#39;</span><span class="token builtin class-name">:</span> x1, <span class="token string">&#39;reward/format&#39;</span><span class="token builtin class-name">:</span> x2, <span class="token string">&#39;reward/accuracy&#39;</span><span class="token builtin class-name">:</span> x3<span class="token punctuation">}</span>
                - Compute log probs 
                    - <span class="token number">24</span> <span class="token punctuation">(</span>nums_per_rank / micro_batch_size_per_device_for_experience <span class="token operator">=</span> <span class="token number">192</span> / <span class="token number">8</span> <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">)</span> Calculate the probability estimates <span class="token keyword">for</span> each completion token sequence, each token corresponds to a probability, with <span class="token number">2096</span> dimensions <span class="token punctuation">(</span>Each GPU<span class="token string">&#39;s processing micro-batch is 8, processed 24 times)
                    - compute old_log_probs &amp; compute ref_log_probs
                        - compute old_log_probs Calculate the log_probs of the old actor model (not yet updated in this batch)
                        - compute ref_log_probs Calculate the log_probs of the ref model
        - Aggregate log prob
            - [1536, 2096] (Aggregate log prob data of the rollout batch)
        - compute advantage Calculate the advantage
            - Calculate the score for each completion token sequence
                - [1536] 
                - scores = token_level_scores.sum(-1) The sum of scores for each token is the final score
            - Calculate the mean and standard deviation for each group 
                - id2mean, id2std 
                - rollout_n&#39;</span>s uids are the same, used to calculate mean and standard deviation
            - Calculate relative advantage within the group 
                - <span class="token punctuation">[</span><span class="token number">1536</span><span class="token punctuation">]</span> 
                - scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span> - id2mean<span class="token punctuation">[</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> / <span class="token punctuation">(</span>id2std<span class="token punctuation">[</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> + eps<span class="token punctuation">)</span>
            - <span class="token punctuation">[</span><span class="token number">1536,2096</span><span class="token punctuation">]</span> <span class="token number">2096</span> dimensions of values are the same, all are the relative advantage calculated within the group
        - update actor <span class="token punctuation">(</span>actor model <span class="token operator">==</span> policy model<span class="token punctuation">)</span>
            - Calculate mini_batches <span class="token punctuation">(</span>if <span class="token assign-left variable">rollout_batch_size</span><span class="token operator">==</span>global_batch_size, mini_batches is <span class="token number">1</span><span class="token punctuation">)</span>
                - nums_per_rank <span class="token number">192</span>
                - global_batch_size <span class="token number">64</span>
                - global_batch_size_per_device <span class="token operator">=</span> global_batch_size * rollout_n / world_size <span class="token operator">=</span> <span class="token number">64</span> * <span class="token number">6</span> / <span class="token number">8</span> <span class="token operator">=</span> <span class="token number">48</span>
                - mini_batches <span class="token operator">=</span> nums_per_rank / global_batch_size_per_device <span class="token operator">=</span> <span class="token number">192</span> / <span class="token number">48</span> <span class="token operator">=</span> <span class="token number">4</span>
            - Train mini batch <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
                - One mini_batch updates parameters once
                - Each mini_batch processes <span class="token number">48</span> entries per GPU, each micro_batch is <span class="token number">2</span> <span class="token keyword">for</span> backpropagation to calculate gradients, performed <span class="token number">24</span> <span class="token builtin class-name">times</span> of gradient accumulation
                - gradient_accumulation <span class="token number">24</span> 
                    - gradient_accumulation <span class="token operator">=</span> global_batch_size_per_device / micro_batch_size_per_device_for_update <span class="token operator">=</span> <span class="token number">48</span> / <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">24</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function w(x,q){return l(),p("div",null,[c,r,i(" more "),m,u,h,d,g,v,k,b,y,_,f,z])}const T=e(o,[["render",w],["__file","035_easyr1_verl_ray_qwenvl_grpo.html.vue"]]);export{T as default};
