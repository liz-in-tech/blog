import{_ as i,a as s,b as l,c as n,d as r,e as p,f as h,g,h as c,i as o}from"./017_chatdev-Vtg6imSr.js";import{_ as m}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as u,c as d,f,a,b as t,e}from"./app-zs8ar7Ql.js";const _={},x=a("h1",{id:"agent与multiagent",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#agent与multiagent","aria-hidden":"true"},"#"),t(" Agent与MultiAgent")],-1),b=a("ul",null,[a("li",null,"Agent"),a("li",null,"MultiAgent")],-1),v=e('<h2 id="_1-agent" tabindex="-1"><a class="header-anchor" href="#_1-agent" aria-hidden="true">#</a> 1. Agent</h2><p>Agent = LLM + 观察 + 思考 + 行动 + 记忆</p><ul><li>LLM：处理信息、做出决策、执行行动</li><li>观察：感知环境，一个智能体可以从环境中接收来自另一个只能提的消息</li><li>思考：分析观察结果和记忆内容，考虑下一步要做什么行动，这种决策能力是LLM提供的</li><li>行动：观察和思考的结果，决定去做的具体的事，可以类比langchain中的tool</li><li>记忆：存储过去的经验</li></ul><p>Agent和Chain之间的区别？</p><ul><li>相同点 <ul><li>都是一步步完成一系列任务，从而最终完成复杂的任务</li></ul></li><li>不同点 <ul><li>Chain是提前定义好的，每一步要做什么（静态的）</li><li>Agent，针对不同用户问题或场景，每一步的任务是事先不确定的（动态的）</li></ul></li></ul><h2 id="_2-react" tabindex="-1"><a class="header-anchor" href="#_2-react" aria-hidden="true">#</a> 2. ReAct</h2><p>Paper Name: ReAct : SYNERGIZING REASONING AND ACTING IN LANGUAGE MODELS</p><p>Paper: https://arxiv.org/pdf/2210.03629</p><p>Github: https://github.com/ysymyth/ReAct</p><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-autogpt" tabindex="-1"><a class="header-anchor" href="#_3-autogpt" aria-hidden="true">#</a> 3. AutoGPT</h2><p>Github: https://github.com/Significant-Gravitas/AutoGPT</p><p>Paper Name: Auto-GPT for Online Decision Making: Benchmarks and Additional Opinions</p><p>Paper: https://arxiv.org/pdf/2306.02224</p><p>自治智能体：只需要告诉它需求，不需要指导先做什么，后做什么，它能自主去提出计划，执行计划，完成需求</p><h2 id="_4-metagpt-多智能体框架" tabindex="-1"><a class="header-anchor" href="#_4-metagpt-多智能体框架" aria-hidden="true">#</a> 4. MetaGPT：多智能体框架</h2><p>Github: https://github.com/geekan/MetaGPT</p><p>Paper Name: METAGPT: META PROGRAMMING FOR A MULTI-AGENT COLLABORATIVE FRAMEWORK</p><p>Paper: https://arxiv.org/pdf/2308.00352</p><h2 id="_5-hugginggpt" tabindex="-1"><a class="header-anchor" href="#_5-hugginggpt" aria-hidden="true">#</a> 5. HuggingGPT</h2><p>Paper Name: HuggingGPT: Solving AI Tasks with ChatGPT and its Friends in Hugging Face</p><p>Paper: https://arxiv.org/pdf/2303.17580</p><p>Github: https://github.com/microsoft/JARVIS</p><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>四阶段</p><ul><li>Task Planning</li><li>Model Selection (来自Hugging Face)</li><li>Task Execution</li><li>Response Generation</li></ul><h2 id="_6-generative-agents-斯坦福小镇" tabindex="-1"><a class="header-anchor" href="#_6-generative-agents-斯坦福小镇" aria-hidden="true">#</a> 6. generative_agents: 斯坦福小镇</h2><p>Paper Name: Generative Agents: Interactive Simulacra of Human Behavior</p><p>Paper: https://dl.acm.org/doi/pdf/10.1145/3586183.3606763</p><p>Github: https://github.com/joonspk-research/generative_agents</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>是该领域第一个最有影响力的工作，为后续多智能体的协作提供了有效依据</p><p>围绕generative multi-agents, 有非常多的应用场景可以去探索</p><h3 id="_6-1-每个agent的property设计" tabindex="-1"><a class="header-anchor" href="#_6-1-每个agent的property设计" aria-hidden="true">#</a> 6.1. 每个Agent的property设计</h3><ul><li>基本信息</li><li>过往经历</li><li>兴趣爱好</li></ul><h3 id="_6-2-memory设计" tabindex="-1"><a class="header-anchor" href="#_6-2-memory设计" aria-hidden="true">#</a> 6.2. Memory设计</h3><ul><li>时间远近 Recency <ul><li>越近发生的赋予权重越高</li></ul></li><li>重要性 Importance <ul><li>起床 &lt; 升职</li></ul></li><li>相关性 Relevance <ul><li>余弦相似性 cosine similarity</li></ul></li></ul>',38),A=a("p",null,[t("score = Recency x "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("msub",null,[a("mi",null,"α"),a("mn",null,"1")])]),a("annotation",{encoding:"application/x-tex"},"\\alpha_1")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.3011em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0037em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"1")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])])]),t(" + Importance x "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("msub",null,[a("mi",null,"α"),a("mn",null,"2")])]),a("annotation",{encoding:"application/x-tex"},"\\alpha_2")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.3011em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0037em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"2")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])])]),t(" + Relevance x "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("msub",null,[a("mi",null,"α"),a("mn",null,"3")])]),a("annotation",{encoding:"application/x-tex"},"\\alpha_3")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.3011em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0037em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"3")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])])])],-1),y=e('<p>Reflection的提取：将Memory Stream进行总结</p><ul><li>定时任务：隔一段时间总结下</li></ul><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-3-planning-为每个agent生成当日的plan" tabindex="-1"><a class="header-anchor" href="#_6-3-planning-为每个agent生成当日的plan" aria-hidden="true">#</a> 6.3. Planning：为每个Agent生成当日的plan</h3><ul><li>每日routine</li><li>根据agent的特点，添加独特的日程</li></ul><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-4-react-agent之间的互动" tabindex="-1"><a class="header-anchor" href="#_6-4-react-agent之间的互动" aria-hidden="true">#</a> 6.4. React: Agent之间的互动</h3><ul><li>是否互动</li><li>原先plan是否要改变</li></ul><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_7-chatdev-多智能体软件开发" tabindex="-1"><a class="header-anchor" href="#_7-chatdev-多智能体软件开发" aria-hidden="true">#</a> 7. ChatDev: 多智能体软件开发</h2><p>Paper Name: Communicative Agents for Software Development</p><p>Paper: https://openreview.net/pdf?id=yW0AZ5wPji</p><p>Github: https://github.com/OpenBMB/ChatDev</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>定义角色 Role</li><li>记忆设计 Memory</li></ul><h2 id="_8-toolllm" tabindex="-1"><a class="header-anchor" href="#_8-toolllm" aria-hidden="true">#</a> 8. ToolLLM</h2><p>Paper Name: TOOLLLM: FACILITATING LARGE LANGUAGE MODELS TO MASTER 16000+ REAL-WORLD APIS</p><p>Paper: https://arxiv.org/pdf/2307.16789</p><p>Github: https://github.com/OpenBMB/ToolBench</p><h2 id="_9-restgpt" tabindex="-1"><a class="header-anchor" href="#_9-restgpt" aria-hidden="true">#</a> 9. RestGPT</h2><p>Paper Name: RestGPT: Connecting Large Language Models with Real-World RESTful APIs</p><p>Paper: https://arxiv.org/pdf/2306.06624</p><p>Github: https://github.com/Yifan-Song793/RestGPT</p>',25);function G(M,P){return u(),d("div",null,[x,b,f(" more "),v,A,y])}const N=m(_,[["render",G],["__file","017_agent_and_multiagent.html.vue"]]);export{N as default};
