import{_ as i,a as n,b as s,c as l,d as r,e as o,f as p,g,h,i as c}from"./017_chatdev-Vtg6imSr.js";import{_ as m}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as d,c as u,f,a as e,b as a,e as t}from"./app-nSXwnGLr.js";const _={},v=e("h1",{id:"agent-multiagent",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#agent-multiagent","aria-hidden":"true"},"#"),a(" Agent & MultiAgent")],-1),b=e("ul",null,[e("li",null,"Agent"),e("li",null,"MultiAgent")],-1),x=t('<h2 id="_1-agent" tabindex="-1"><a class="header-anchor" href="#_1-agent" aria-hidden="true">#</a> 1. Agent</h2><p>Agent = LLM + Observation + Thinking + Action + Memory</p><ul><li><strong>LLM</strong>: Processes information, makes decisions, and executes actions</li><li><strong>Observation</strong>: Perception of the environment. An agent can receive messages from other intelligent entities in the environment.</li><li><strong>Thinking</strong>: Analyzes the results of observations and memory content, considers what action to take next. This decision-making ability is provided by the LLM.</li><li><strong>Action</strong>: The result of observation and thinking, determining what specific tasks to carry out. This is similar to tools in LangChain.</li><li><strong>Memory</strong>: Stores past experiences.</li></ul><p>Difference Between Agent and Chain</p><ul><li><p><strong>Similarities</strong>:</p><ul><li>Both complete a series of tasks step by step to ultimately achieve complex goals.</li></ul></li><li><p><strong>Differences</strong>:</p><ul><li><strong>Chain</strong>: A predefined sequence of tasks, i.e., static (what should be done in each step is determined in advance).</li><li><strong>Agent</strong>: The tasks in each step are not predefined and can vary depending on the user&#39;s questions or scenarios (dynamic).</li></ul></li></ul><h2 id="_2-react" tabindex="-1"><a class="header-anchor" href="#_2-react" aria-hidden="true">#</a> 2. ReAct</h2><p>Paper Name: ReAct : SYNERGIZING REASONING AND ACTING IN LANGUAGE MODELS</p><p>Paper: https://arxiv.org/pdf/2210.03629</p><p>Github: https://github.com/ysymyth/ReAct</p><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-autogpt" tabindex="-1"><a class="header-anchor" href="#_3-autogpt" aria-hidden="true">#</a> 3. AutoGPT</h2><p>Github: https://github.com/Significant-Gravitas/AutoGPT</p><p>Paper Name: Auto-GPT for Online Decision Making: Benchmarks and Additional Opinions</p><p>Paper: https://arxiv.org/pdf/2306.02224</p><p>An autonomous agent only needs to be told the requirements, and does not need guidance on what to do first or next. It can autonomously propose a plan, execute it, and complete the task.</p><h2 id="_4-metagpt" tabindex="-1"><a class="header-anchor" href="#_4-metagpt" aria-hidden="true">#</a> 4. MetaGPT</h2><p>Github: https://github.com/geekan/MetaGPT</p><p>Paper Name: METAGPT: META PROGRAMMING FOR A MULTI-AGENT COLLABORATIVE FRAMEWORK</p><p>Paper: https://arxiv.org/pdf/2308.00352</p><h2 id="_5-hugginggpt" tabindex="-1"><a class="header-anchor" href="#_5-hugginggpt" aria-hidden="true">#</a> 5. HuggingGPT</h2><p>Paper Name: HuggingGPT: Solving AI Tasks with ChatGPT and its Friends in Hugging Face</p><p>Paper: https://arxiv.org/pdf/2303.17580</p><p>Github: https://github.com/microsoft/JARVIS</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Four Stages</p><ul><li>Task Planning</li><li>Model Selection (from Hugging Face)</li><li>Task Execution</li><li>Response Generation</li></ul><h2 id="_6-generative-agents-stanford-town" tabindex="-1"><a class="header-anchor" href="#_6-generative-agents-stanford-town" aria-hidden="true">#</a> 6. generative_agents: Stanford Town</h2><p>Paper Name: Generative Agents: Interactive Simulacra of Human Behavior</p><p>Paper: https://dl.acm.org/doi/pdf/10.1145/3586183.3606763</p><p>Github: https://github.com/joonspk-research/generative_agents</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>This is one of the most influential works in this field, providing an effective foundation for future multi-agent collaboration.</p><p>There are many potential application scenarios to explore in the realm of generative multi-agents.</p><h3 id="_6-1-design-of-each-agent-s-properties" tabindex="-1"><a class="header-anchor" href="#_6-1-design-of-each-agent-s-properties" aria-hidden="true">#</a> 6.1. Design of Each Agent&#39;s Properties</h3><ul><li>Basic Information</li><li>Past Experiences</li><li>Interests and Hobbies</li></ul><h3 id="_6-2-memory-design" tabindex="-1"><a class="header-anchor" href="#_6-2-memory-design" aria-hidden="true">#</a> 6.2. Memory Design</h3><ul><li><p><strong>Recency</strong> (Time proximity):</p><ul><li>The closer an event is to the present, the more weight it carries.</li></ul></li><li><p><strong>Importance</strong>:</p><ul><li>Some events are more important than others, e.g., &quot;Waking up&quot; &lt; &quot;Promotion&quot;.</li></ul></li><li><p><strong>Relevance</strong></p><ul><li>Cosine Similarity</li></ul></li></ul>',38),y=e("p",null,[a("score = Recency x "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("msub",null,[e("mi",null,"α"),e("mn",null,"1")])]),e("annotation",{encoding:"application/x-tex"},"\\alpha_1")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),e("span",{class:"msupsub"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.3011em"}},[e("span",{style:{top:"-2.55em","margin-left":"-0.0037em","margin-right":"0.05em"}},[e("span",{class:"pstrut",style:{height:"2.7em"}}),e("span",{class:"sizing reset-size6 size3 mtight"},[e("span",{class:"mord mtight"},"1")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.15em"}},[e("span")])])])])])])])]),a(" + Importance x "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("msub",null,[e("mi",null,"α"),e("mn",null,"2")])]),e("annotation",{encoding:"application/x-tex"},"\\alpha_2")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),e("span",{class:"msupsub"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.3011em"}},[e("span",{style:{top:"-2.55em","margin-left":"-0.0037em","margin-right":"0.05em"}},[e("span",{class:"pstrut",style:{height:"2.7em"}}),e("span",{class:"sizing reset-size6 size3 mtight"},[e("span",{class:"mord mtight"},"2")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.15em"}},[e("span")])])])])])])])]),a(" + Relevance x "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("msub",null,[e("mi",null,"α"),e("mn",null,"3")])]),e("annotation",{encoding:"application/x-tex"},"\\alpha_3")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),e("span",{class:"msupsub"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.3011em"}},[e("span",{style:{top:"-2.55em","margin-left":"-0.0037em","margin-right":"0.05em"}},[e("span",{class:"pstrut",style:{height:"2.7em"}}),e("span",{class:"sizing reset-size6 size3 mtight"},[e("span",{class:"mord mtight"},"3")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.15em"}},[e("span")])])])])])])])])],-1),A=t('<p>Reflection Extraction: Summarizing the Memory Stream</p><ul><li>Scheduled Task: Summarize periodically after a certain time.</li></ul><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-3-planning-generating-a-daily-plan-for-each-agent" tabindex="-1"><a class="header-anchor" href="#_6-3-planning-generating-a-daily-plan-for-each-agent" aria-hidden="true">#</a> 6.3. Planning: Generating a Daily Plan for Each Agent</h3><ul><li>Daily routine</li><li>Add unique schedules based on the characteristics of the agent</li></ul><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-4-react-interaction-between-agents" tabindex="-1"><a class="header-anchor" href="#_6-4-react-interaction-between-agents" aria-hidden="true">#</a> 6.4. React: Interaction Between Agents</h3><ul><li>Whether interaction occurs</li><li>Whether the original plan needs to be changed</li></ul><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_7-chatdev-multi-agent-software-development" tabindex="-1"><a class="header-anchor" href="#_7-chatdev-multi-agent-software-development" aria-hidden="true">#</a> 7. ChatDev: Multi-Agent Software Development</h2><p>Paper Name: Communicative Agents for Software Development</p><p>Paper: https://openreview.net/pdf?id=yW0AZ5wPji</p><p>Github: https://github.com/OpenBMB/ChatDev</p><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>Define Roles</li><li>Memory Design</li></ul><h2 id="_8-toolllm" tabindex="-1"><a class="header-anchor" href="#_8-toolllm" aria-hidden="true">#</a> 8. ToolLLM</h2><p>Paper Name: TOOLLLM: FACILITATING LARGE LANGUAGE MODELS TO MASTER 16000+ REAL-WORLD APIS</p><p>Paper: https://arxiv.org/pdf/2307.16789</p><p>Github: https://github.com/OpenBMB/ToolBench</p><h2 id="_9-restgpt" tabindex="-1"><a class="header-anchor" href="#_9-restgpt" aria-hidden="true">#</a> 9. RestGPT</h2><p>Paper Name: RestGPT: Connecting Large Language Models with Real-World RESTful APIs</p><p>Paper: https://arxiv.org/pdf/2306.06624</p><p>Github: https://github.com/Yifan-Song793/RestGPT</p>',25);function T(P,M){return d(),u("div",null,[v,b,f(" more "),x,y,A])}const R=m(_,[["render",T],["__file","017_agent_and_multiagent.html.vue"]]);export{R as default};
