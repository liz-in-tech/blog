const t=JSON.parse('{"key":"v-393d10f2","path":"/zh/posts/cs/Netty.html","title":"Netty","lang":"zh-CN","frontmatter":{"icon":"lightbulb","description":"Netty 同步/异步，阻塞非阻塞 在等待数据阶段：发起网络调用后，在服务端没准备好数据的情况下。客户端阻塞，则为阻塞IO；网络调用立即返回，则为非阻塞IO 在数据传输阶段: 如果发起网络调用的线程还可以做其它事情则为异步，否则为同步 BIO 下图为MySQL Connector-Java 的架构，为典型的BIO: 如果把这个架构改成NIO的: 为什么MySQL 不使用NIO的模式:","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://liz-starfield.github.io/blog/posts/cs/Netty.html"}],["meta",{"property":"og:url","content":"https://liz-starfield.github.io/blog/zh/posts/cs/Netty.html"}],["meta",{"property":"og:site_name","content":"莉芝"}],["meta",{"property":"og:title","content":"Netty"}],["meta",{"property":"og:description","content":"Netty 同步/异步，阻塞非阻塞 在等待数据阶段：发起网络调用后，在服务端没准备好数据的情况下。客户端阻塞，则为阻塞IO；网络调用立即返回，则为非阻塞IO 在数据传输阶段: 如果发起网络调用的线程还可以做其它事情则为异步，否则为同步 BIO 下图为MySQL Connector-Java 的架构，为典型的BIO: 如果把这个架构改成NIO的: 为什么MySQL 不使用NIO的模式:"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-16T06:02:20.000Z"}],["meta",{"property":"article:author","content":"Liz"}],["meta",{"property":"article:modified_time","content":"2024-10-16T06:02:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Netty\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-16T06:02:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liz\\",\\"url\\":\\"https://github.com/liz-starfield\\"}]}"]]},"headers":[{"level":2,"title":"同步/异步，阻塞非阻塞","slug":"同步-异步-阻塞非阻塞","link":"#同步-异步-阻塞非阻塞","children":[]},{"level":2,"title":"BIO","slug":"bio","link":"#bio","children":[]},{"level":2,"title":"NIO 基础","slug":"nio-基础","link":"#nio-基础","children":[{"level":3,"title":"三大组件","slug":"三大组件","link":"#三大组件","children":[]}]},{"level":2,"title":"Reactor线程模型","slug":"reactor线程模型","link":"#reactor线程模型","children":[]},{"level":2,"title":"Netty","slug":"netty-1","link":"#netty-1","children":[{"level":3,"title":"通信协议","slug":"通信协议","link":"#通信协议","children":[]},{"level":3,"title":"线程模型","slug":"线程模型","link":"#线程模型","children":[]},{"level":3,"title":"读流程","slug":"读流程","link":"#读流程","children":[]},{"level":3,"title":"写流程","slug":"写流程","link":"#写流程","children":[]},{"level":3,"title":"用Netty写RocketMQ网络层","slug":"用netty写rocketmq网络层","link":"#用netty写rocketmq网络层","children":[]}]},{"level":2,"title":"中间件通用设计理念","slug":"中间件通用设计理念","link":"#中间件通用设计理念","children":[{"level":3,"title":"内存管理","slug":"内存管理","link":"#内存管理","children":[]},{"level":3,"title":"文件编程","slug":"文件编程","link":"#文件编程","children":[]}]}],"git":{"createdTime":1729058540000,"updatedTime":1729058540000,"contributors":[{"name":"unknown","email":"15721607377@163.com","commits":1}]},"readingTime":{"minutes":12.36,"words":3709},"filePathRelative":"zh/posts/cs/Netty.md","localizedDate":"2024年10月16日","excerpt":"<h1> Netty</h1>\\n<h2> 同步/异步，阻塞非阻塞</h2>\\n<p>在等待数据阶段：发起网络调用后，在服务端没准备好数据的情况下。客户端阻塞，则为阻塞IO；网络调用立即返回，则为非阻塞IO <br></p>\\n<p>在数据传输阶段: 如果发起网络调用的线程还可以做其它事情则为异步，否则为同步 <br></p>\\n<h2> BIO</h2>\\n<p>下图为MySQL Connector-Java 的架构，为典型的BIO: <br></p>\\n<p> <br></p>\\n<p>如果把这个架构改成NIO的: <br>\\n <br></p>\\n<p>为什么MySQL 不使用NIO的模式: <br></p>","autoDesc":true}');export{t as data};
