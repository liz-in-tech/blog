import{_ as i,a as e,b as l,c as n,d as r,e as t,f as s}from"./039_executions-VcnBxRVY.js";import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as d,c,f as u,a,b as h,e as p}from"./app-cMTkAn20.js";const g={},m=a("h1",{id:"使用-n8n-构建-telegram-个人助手",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#使用-n8n-构建-telegram-个人助手","aria-hidden":"true"},"#"),h(" 使用 n8n 构建 Telegram 个人助手")],-1),_=a("ul",null,[a("li",null,"什么是 n8n 以及如何使用 n8n"),a("li",null,"创建 Telegram 机器人"),a("li",null,"在 n8n 中设置 Telegram 触发器"),a("li",null,"完整的工作流")],-1),f=p('<h2 id="_1-效果预览" tabindex="-1"><a class="header-anchor" href="#_1-效果预览" aria-hidden="true">#</a> 1. 效果预览</h2><p>用户以对话的方式与telegram bot交互，支持文本、语音、图片输入</p><ul><li>发送给 Telegram 机器人的消息会触发 n8n 工作流</li><li>n8n 处理输入并将结果发送回 Telegram</li><li>用户无缝接收机器人的响应</li></ul><figure><img src="'+i+`" alt="n8n-assisstant" tabindex="0" loading="lazy"><figcaption>n8n-assisstant</figcaption></figure><h2 id="_2-什么是-n8n" tabindex="-1"><a class="header-anchor" href="#_2-什么是-n8n" aria-hidden="true">#</a> 2. 什么是 n8n？</h2><p>n8n 是一个强大的开源、低代码工作流程自动化工具，使用户能够无缝连接和自动化各种应用程序和服务。它提供了直观的可视化界面，允许通过连接“节点”（代表应用或操作）来创建工作流程，以简化数据传输、通知和任务调度等流程。</p><p>官网: https://n8n.io/</p><p>GitHub: https://github.com/n8n-io/n8n</p><h2 id="_3-如何使用-n8n" tabindex="-1"><a class="header-anchor" href="#_3-如何使用-n8n" aria-hidden="true">#</a> 3. 如何使用 n8n</h2><p>有三种主要方式部署 n8n：</p><ol><li>官方云平台</li><li>通过 Docker 本地自托管</li><li>部署在您自己的云服务器上</li></ol><p>在这里，我使用官方云平台以简化操作。</p><h3 id="_3-1-选项-1-官方云平台" tabindex="-1"><a class="header-anchor" href="#_3-1-选项-1-官方云平台" aria-hidden="true">#</a> 3.1. 选项 1: 官方云平台</h3><p>在官方网站上点击 <strong>“Get Started for free”</strong>。</p><ul><li><strong>优点</strong><ul><li>14 天免费试用</li><li>稳定且无需麻烦</li></ul></li><li><strong>缺点</strong><ul><li>14 天后需付费</li><li>无法访问社区节点</li></ul></li></ul><h3 id="_3-2-选项-2-通过docker进行本地自建" tabindex="-1"><a class="header-anchor" href="#_3-2-选项-2-通过docker进行本地自建" aria-hidden="true">#</a> 3.2. 选项 2: 通过Docker进行本地自建</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> volume create n8n_data

<span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token punctuation">\\</span>
 <span class="token parameter variable">--name</span> n8n <span class="token punctuation">\\</span>
 <span class="token parameter variable">-p</span> <span class="token number">5678</span>:5678 <span class="token punctuation">\\</span>
 <span class="token parameter variable">-e</span> <span class="token assign-left variable">N8N_RUNNERS_ENABLED</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
 <span class="token parameter variable">-v</span> n8n_data:/home/node/.n8n <span class="token punctuation">\\</span>
 docker.n8n.io/n8nio/n8n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在浏览器中打开: http://localhost:5678</p><p>n8n 连接 Ollama:</p><p>如果 n8n 部署在 docker 上，在配置 n8n 上的 Ollama 节点时，需要把 Ollama 的 <code>localhost</code> 改为 <code>host.docker.internal</code>，即</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://host.docker.internal:11434
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>优点</strong><ul><li>可以搭配 Ollama 做到完全免费</li><li>支持社区节点</li></ul></li><li><strong>缺点</strong><ul><li>使用 webhook 或连接外部应用可能具有挑战性，需要暴露公共网络</li><li>运行时会消耗本地计算机资源，计算机关闭时停止运行，每次开机需要重新启动 Docker 容器</li></ul></li></ul><h3 id="_3-3-选项-3-部署在云服务器上" tabindex="-1"><a class="header-anchor" href="#_3-3-选项-3-部署在云服务器上" aria-hidden="true">#</a> 3.3. 选项 3: 部署在云服务器上</h3><ul><li><strong>优点</strong><ul><li>可以保持24h开机（24/7 运行）</li><li>费用比官方的云平台便宜不少</li></ul></li><li><strong>缺点</strong><ul><li>稳定性低于官方托管</li><li>对于非技术用户来说，设置可能较复杂</li></ul></li></ul><h2 id="_4-创建-telegram-机器人" tabindex="-1"><a class="header-anchor" href="#_4-创建-telegram-机器人" aria-hidden="true">#</a> 4. 创建 Telegram 机器人</h2><ul><li>在 Telegram 搜索栏中搜索 <code>BotFather</code></li></ul><figure><img src="`+e+'" alt="Search for BotFather" tabindex="0" loading="lazy"><figcaption>Search for BotFather</figcaption></figure><ul><li><p>添加 <code>BotFather</code> 以创建新机器人</p></li><li><p>与 <code>BotFather</code> 对话，设置新机器人的名称和用户名</p></li></ul><figure><img src="'+l+'" alt="Chat with BotFather" tabindex="0" loading="lazy"><figcaption>Chat with BotFather</figcaption></figure><ul><li>您现在拥有了自己的 Telegram 机器人及其 API 令牌</li></ul><h2 id="_5-在-n8n-中设置-telegram-触发器" tabindex="-1"><a class="header-anchor" href="#_5-在-n8n-中设置-telegram-触发器" aria-hidden="true">#</a> 5. 在 n8n 中设置 Telegram 触发器</h2><p>常见触发器类型</p><ul><li><strong>n8n UI 中的手动触发器</strong>： <ul><li>通过在 n8n 中点击 &quot;Execute Workflow&quot; 启动工作流</li><li>在 n8n 中直接发送聊天消息以触发工作流</li></ul></li><li><strong>定时触发器</strong>：每天、每小时或自定义间隔运行工作流</li><li><strong>聊天应用事件</strong>： <ul><li>Telegram</li><li>WhatsApp</li><li>Slack</li><li>Discord</li></ul></li><li><strong>其他应用事件</strong>： <ul><li>收到新 Gmail 邮件时触发</li><li>Notion 数据库添加新页面时触发</li></ul></li><li><strong>Webhook 触发器</strong>：收到 Http 请求 （n8n平台能在公网访问）</li></ul><p>在这里，我使用 Telegram 触发器作为入口点。</p><h2 id="_6-使用-switch-节点进行路由" tabindex="-1"><a class="header-anchor" href="#_6-使用-switch-节点进行路由" aria-hidden="true">#</a> 6. 使用 Switch 节点进行路由</h2><p>参数设置</p><ul><li>模式：选择 <code>Rules</code></li><li>路由规则 <ul><li>将相关字段直接拖到路由规则部分</li><li>将匹配条件设置为 <code>String -&gt; Exists</code> 以检查特定字符串的存在</li><li>为每个分支定义输出名称</li></ul></li></ul><figure><img src="'+n+'" alt="Switch Node" tabindex="0" loading="lazy"><figcaption>Switch Node</figcaption></figure><h2 id="_7-处理不同分支" tabindex="-1"><a class="header-anchor" href="#_7-处理不同分支" aria-hidden="true">#</a> 7. 处理不同分支</h2><ul><li>文本分支 <ul><li>提取文本消息</li><li>将其用作 User Prompt</li><li>在 AI Agent 节点中与 System Prompt 结合</li><li>将生成的结果发送回 Telegram</li></ul></li><li>语音分支 <ul><li>从 Telegram 接收音频文件</li><li>使用多模态模型将其转录为文本</li><li>将转录文本用作 User Prompt</li><li>使用 AI Agent 处理并将结果发送回 Telegram</li></ul></li><li>图像分支 <ul><li>接收上传的图像</li><li>使用多模态模型分析图像</li><li>将分析结果发送回 Telegram</li></ul></li></ul><h2 id="_8-完整工作流程" tabindex="-1"><a class="header-anchor" href="#_8-完整工作流程" aria-hidden="true">#</a> 8. 完整工作流程</h2><figure><img src="'+r+'" alt="Complete Workflow" tabindex="0" loading="lazy"><figcaption>Complete Workflow</figcaption></figure><h2 id="_9-工作流调试与优化" tabindex="-1"><a class="header-anchor" href="#_9-工作流调试与优化" aria-hidden="true">#</a> 9. 工作流调试与优化</h2><h3 id="_9-1-激活之前" tabindex="-1"><a class="header-anchor" href="#_9-1-激活之前" aria-hidden="true">#</a> 9.1. 激活之前</h3><ul><li><strong>非激活状态</strong>：当工作流程处于 “Inactive” 状态时，只能通过手动点击 “Execute Workflow” 按钮进行执行，该按钮位于底部或初始触发器节点处</li><li><strong>节点检查</strong>：每一个节点都可以看到输入信息和输出结果</li></ul><figure><img src="'+t+'" alt="Execute details" tabindex="0" loading="lazy"><figcaption>Execute details</figcaption></figure><h3 id="_9-2-激活之后" tabindex="-1"><a class="header-anchor" href="#_9-2-激活之后" aria-hidden="true">#</a> 9.2. 激活之后</h3><ul><li><strong>激活工作流</strong>：工作流程构建完成后，将其状态切换为 “Active”。通过 Telegram 发送的消息将自动触发工作流</li><li><strong>执行跟踪</strong>：每次触发都会在 n8n 平台上记录。您可以在 “Executions” 部分查看详情，包括走了哪个分支、执行是否成功。如果一部分失败了，您可以在该页面进行debug，排查问题</li></ul><figure><img src="'+s+'" alt="Executions" tabindex="0" loading="lazy"><figcaption>Executions</figcaption></figure><h2 id="_10-下一步" tabindex="-1"><a class="header-anchor" href="#_10-下一步" aria-hidden="true">#</a> 10. 下一步</h2><ul><li>添加记忆功能以跟踪对话历史</li><li>添加工具以扩展功能</li><li>连接知识库以获取更丰富的外部信息</li><li>探索其他触发器和集成以个性化您的助理</li></ul>',51);function b(x,v){return d(),c("div",null,[m,_,u(" more "),f])}const E=o(g,[["render",b],["__file","039_n8n.html.vue"]]);export{E as default};
